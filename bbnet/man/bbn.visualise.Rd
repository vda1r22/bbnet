% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bbn.visualise.R
\name{bbn.visualise}
\alias{bbn.visualise}
\title{Bayesian Belief Model v4.0.1 - Visualise function}
\usage{
bbn.visualise(
  bbn.model,
  priors1,
  timesteps = 5,
  disturbance = 1,
  threshold = 0.2,
  font.size = 0.7,
  arrow.size = 4
)
}
\arguments{
\item{bbn.visualise}{This function produces a network diagram in each timestep of the model.}
}
\value{
Network diagram where the most important interactions at that timestep are listed
and the colour of nodes changes from black (showing the highest increase) to white (showing the lowest increase / largest decrease).
}
\description{
27 Feb 2024
Copyright Rick Stafford

Requires all functions loaded and:
  1) BBN interaction grid - named bbn.model
  2) list of scenarios indicating changes (1-12 can be used). Named priors1, priors2, ... priors12

Required arguments:
   1) bbn.model - a matrix or dataframe of interactions between different model nodes.
   2) priors1 - an X by 2 array of initial changes to the system under investigation.
      The first column should be a -4 to 4 (including 0) integer value for each node in the network with negative values indicating a decrease and positive values representing an increase.
      0 represents no change.

Optional Arguments:
   3) timesteps - default = 5. This is the number of timesteps the model performs.
      Note, timesteps are arbitrary and non-linear. However, something occurring in timestep 2, should occur before timestep 3.
   4) disturbance - default = 1.
      where 1 - creates a prolonged or press disturbance as per the bbn.predict() function. Essentially prior values for each manipulated node are at least maintained (if not increased through reinforcement in the model) over all timesteps.
      where 2 - shows a brief pulse disturbance, which can be useful to visualise changes as peaks and troughs in increase and decrease of nodes can propagate through the network.
   5) threshold - default = 0.2. Nodes which deviate from 0 by more than this threshold value will display interactions with other nodes.
      As mentioned, values in these visualisation functions don't directly correspond to those in the bbn.predict() function.
      This value can be tweaked from 0 to 4 to create the most useful visualisations.
   6) font.size - default = 0.7. Changes the font in the figure produced.
      The value here is a multiplier of the default font size used in the igraph package and does not correspond to the font.size argument in the bbn.timeseries() function.
   7) arrow.size - default = 4. Changes the size of the arrows.
      Note, sizes do vary based on interaction strength, so this is a multiplier for visualisation purposes.
}
